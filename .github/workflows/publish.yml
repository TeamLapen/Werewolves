name: Publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version Type'
        required: true
        default: 'alpha'
        type: choice
        options:
          - alpha
          - beta
          - release
      additionalVersionInfo:
        description: 'Additional Version Info. Only relevant for beta versions.'
        required: false
        default: ''
        type: string

permissions:
  contents: read

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get_environment.outputs.environment }}
      version: ${{ steps.get_environment.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - name: Determine Environment
      id: get_environment
      run: |
        if [[ ${{ github.event.inputs.versionType }} == 'alpha' ]]; then
          echo "environment=Testing" >> $GITHUB_OUTPUT
          echo "version=alpha" >> $GITHUB_OUTPUT
        elif [[ ${{ github.event.inputs.versionType }} == 'beta' ]]; then
          echo "environment=Testing" >> $GITHUB_OUTPUT
          echo "version=beta=${{ github.event.inputs.additionalVersionInfo }}" >> $GITHUB_OUTPUT
        elif [[ ${{ github.event.inputs.versionType }} == 'release' ]]; then
          echo "environment=Release" >> $GITHUB_OUTPUT
          echo "version=release" >> $GITHUB_OUTPUT
        elif [[ ${{ github.event.ref }} =~ refs\/tags\/v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)-(0|[1-9]\d*)\.(0|[1-9]\d*) ]]; then
          echo "environment=Release" >> $GITHUB_OUTPUT
          echo "version=release" >> $GITHUB_OUTPUT
        fi

  determine-crowdin-branch:
    environment: Testing
    runs-on: ubuntu-latest
    outputs:
      crowdin_branch: ${{ steps.get_crowdin_branch.outputs.crowdin_branch }}
    steps:
    - uses: actions/checkout@v3
    - name: Determine Crowdin branch
      id: get_crowdin_branch
      run: |
        echo "crowdin_branch=$(echo ${{ github.ref_name }} | cut -d '.' -f 1,2)" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: [download-translations, determine-environment]
    environment: ${{ needs.determine-environment.outputs.environment }}
    if: needs.determine-environment.outputs.version != '' && needs.determine-environment.outputs.environment != ''

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: 'gradle'
    - name: Download translations
      uses: crowdin/github-action@v1
      with:
        download_translations: true
        upload_sources: false
        crowdin_branch_name: ${{ needs.download-translations.outputs.crowdin_branch }}
      env:
        CROWDIN_KEY: ${{ secrets.CROWDIN_KEY }}
    - name: Publish
      uses: gradle/gradle-build-action@v2.7.0
      with:
        arguments: build publish curseforge modrinth -PMAVEN_URL=${{ secrets.MAVEN_URL }} -PMAVEN_USER=${{ secrets.MAVEN_USER }} -PMAVEN_TOKEN=${{ secrets.MAVEN_TOKEN }} -PCURSEFORGE_API=${{ secrets.CURSEFORGE_API }} -PMODRINTH_API=${{ secrets.MODRINTH_API }} -P${{ needs.determine-environment.outputs.version }}=true
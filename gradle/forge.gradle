repositories {
    maven {
        name = "Maxanier"
        url = "https://maven.maxanier.de/releases"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "cheaterpaul snapshots"
        url = "https://maven.paube.de/snapshots"
    }
    maven {
        url "https://nexus.resourcefulbees.com/repository/maven-public/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev/"
        content {
            includeGroup "mezz.jei"
        }
    }

    maven {
        name = "Forge"
        url = "https://maven.minecraftforge.net"
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "net.neoforged:neoforge:${forge_version}"

    implementation "de.teamlapen.vampirism:Vampirism:${project.minecraft_version}-${project.vampirism_version}"

    if (include_jei.toBoolean()) {
        compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${project.jei_version}" //API for compile
        compileOnly "mezz.jei:jei-${jei_mc_version}-neoforge-api:${project.jei_version}" //API for compile
        runtimeOnly "mezz.jei:jei-${jei_mc_version}-neoforge:${project.jei_version}" //Full for runtime
    }

    if (include_guideapi.toBoolean()) {
        compileOnly "de.maxanier.guideapi:Guide-API-VP:${project.guideapi_version}"
        runtimeOnly "de.maxanier.guideapi:Guide-API-VP:${project.guideapi_version}"
    }

    if (include_terrablender.toBoolean()) {
        compileOnly "com.github.glitchfiend:TerraBlender-neoforge:${project.terrablender_version}"
        runtimeOnly "com.github.glitchfiend:TerraBlender-neoforge:${project.terrablender_version}"
    }

    if (include_jade.toBoolean()) {
        runtimeOnly "curse.maven:jade-324717:" + project.jade_version
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'

        modSources project.sourceSets.api, project.sourceSets.main
    }
    client {
        systemProperty 'vampirism_target', 'dev'
        jvmArgument '-XX:+AllowEnhancedClassRedefinition'
        jvmArgument '-XX:+IgnoreUnrecognizedVMOptions'
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        systemProperty 'mixin.debug.export', 'true'
    }

    server {
        systemProperty 'vampirism_target', 'dev'
        jvmArgument '-XX:+AllowEnhancedClassRedefinition'
        jvmArgument '-XX:+IgnoreUnrecognizedVMOptions'
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'vampirism_target', 'dev'
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        systemProperty 'vampirism_target', 'dev_data'
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}